

.. _sphx_glr_examples_Basics_plot_statistics.py:


==========
Statistics
==========

Demonstrates the different statistics you can use with ChainConsumer.




By default, ChainConsumer uses maximum likelihood statistics. Thus you do not
need to explicitly enable maximum likelihood statistics. If you want to
anyway, the keyword is `"max"`.



.. code-block:: python


    import numpy as np
    from scipy.stats import skewnorm
    from chainconsumer import ChainConsumer

    # Lets create some data here to set things up
    np.random.seed(0)
    data = skewnorm.rvs(5, size=(1000000, 2))
    parameters = ["$x$", "$y$"]


    # Now the normal way of giving data is passing a numpy array and parameter separately
    c = ChainConsumer().add_chain(data, parameters=parameters).configure_general(statistics="max")
    fig = c.plot()
    fig.set_size_inches(2.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.




.. image:: /examples/Basics/images/sphx_glr_plot_statistics_001.png
    :align: center




Or we can enable cumulative statistics



.. code-block:: python


    c = ChainConsumer().add_chain(data, parameters=parameters).configure_general(statistics="cumulative")
    fig = c.plot()
    fig.set_size_inches(2.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.




.. image:: /examples/Basics/images/sphx_glr_plot_statistics_002.png
    :align: center




Or we can enable mean statistics



.. code-block:: python


    c = ChainConsumer().add_chain(data, parameters=parameters).configure_general(statistics="mean")
    fig = c.plot()
    fig.set_size_inches(2.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.




.. image:: /examples/Basics/images/sphx_glr_plot_statistics_003.png
    :align: center




We can also take advantage of the ability to pass lists to ChainConsumer's
configuration to have report different statistics for different chains.
Please note, I don't recommend you do this in practise, it is just begging
for confusion.



.. code-block:: python


    c = ChainConsumer().add_chain(data, parameters=parameters)
    c.add_chain(data)
    c.add_chain(data)
    c.configure_general(statistics=["max", "mean", "cumulative"],
                        linestyles=["-", "--", ":"], linewidths=[1, 2, 3])
    c.configure_bar(shade=True)
    fig = c.plot()
    fig.set_size_inches(2.5 + fig.get_size_inches())  # Resize fig for doco. You don't need this.



.. image:: /examples/Basics/images/sphx_glr_plot_statistics_004.png
    :align: center




**Total running time of the script:** ( 0 minutes  5.005 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_statistics.py <plot_statistics.py>`



.. container:: sphx-glr-download

    :download:`Download Jupyter notebook: plot_statistics.ipynb <plot_statistics.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
